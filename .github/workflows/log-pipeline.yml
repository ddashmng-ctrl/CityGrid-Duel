name: Log Pipeline Automation

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  log-pipeline:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          # Add any other dependencies if needed

      - name: Validate JSON files against schema
        run: |
          echo "üîç Validating JSON files against soul_debate_schema.json..."
          python validate_json.py
          if [ $? -ne 0 ]; then
            echo "‚ùå JSON validation failed"
            exit 1
          fi
          echo "‚úÖ All JSON files are valid"

      - name: Run aggregate_logs.py
        run: |
          echo "üìä Aggregating logs into CSV..."
          python aggregate_logs.py
          if [ $? -ne 0 ]; then
            echo "‚ùå Log aggregation failed"
            exit 1
          fi
          echo "‚úÖ Logs aggregated successfully"

      - name: Run summarize_logs.py
        run: |
          echo "üìù Generating summary and updating README..."
          python summarize_logs.py
          if [ $? -ne 0 ]; then
            echo "‚ùå Log summarization failed"
            exit 1
          fi
          echo "‚úÖ Summary generated successfully"

      - name: Check for changes
        id: changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          # Check if there are any changes to commit
          if git diff --quiet && git diff --staged --quiet; then
            echo "No changes to commit"
            echo "has_changes=false" >> $GITHUB_OUTPUT
          else
            echo "Changes detected"
            echo "has_changes=true" >> $GITHUB_OUTPUT
            
            # Show what changed
            echo "Files modified:"
            git diff --name-only
            git diff --staged --name-only
          fi

      - name: Commit updated files
        if: steps.changes.outputs.has_changes == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          # Add only the files we want to commit
          git add aggregated_logs.csv README.md
          
          # Check if there are staged changes before committing
          if git diff --staged --quiet; then
            echo "No staged changes to commit"
          else
            git commit -m "ü§ñ Auto-update: Aggregated logs and README summary
            
            - Updated aggregated_logs.csv with latest log data
            - Refreshed README.md with current soul debate analytics
            
            Generated by log-pipeline workflow"
            
            echo "‚úÖ Changes committed successfully"
          fi

      - name: Push changes
        if: steps.changes.outputs.has_changes == 'true'
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: main

      - name: Summary
        run: |
          echo "üéâ Log pipeline completed successfully!"
          echo "‚úÖ JSON validation passed"
          echo "‚úÖ Logs aggregated"
          echo "‚úÖ Summary generated"
          if [ "${{ steps.changes.outputs.has_changes }}" == "true" ]; then
            echo "‚úÖ Changes committed and pushed"
          else
            echo "‚ÑπÔ∏è No changes to commit"
          fi