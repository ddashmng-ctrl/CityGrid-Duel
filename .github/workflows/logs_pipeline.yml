name: Soul Debate Logs Pipeline

on:
  pull_request:
    paths:
      - 'logs/example_soul_debate*.json'
      - 'logs/soul_debate_schema.json'
      - 'summarize_logs.py'
      - '.github/workflows/logs_pipeline.yml'
  push:
    branches:
      - main
    paths:
      - 'logs/example_soul_debate*.json'
      - 'logs/soul_debate_schema.json'
      - 'summarize_logs.py'

jobs:
  analyze-and-comment:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Validate log files
        run: |
          echo "Validating soul debate log files..."
          # Check if logs directory exists
          if [ ! -d "logs" ]; then
            echo "Error: logs directory not found"
            exit 1
          fi
          
          # Check if schema exists
          if [ ! -f "logs/soul_debate_schema.json" ]; then
            echo "Error: soul_debate_schema.json not found"
            exit 1
          fi
          
          # Validate JSON format of log files
          for file in logs/example_soul_debate*.json; do
            if [ -f "$file" ]; then
              echo "Validating $file..."
              python -m json.tool "$file" > /dev/null || {
                echo "Error: Invalid JSON in $file"
                exit 1
              }
            fi
          done
          
          echo "All log files validated successfully"

      - name: Run summarize_logs.py
        run: |
          echo "Running summarize_logs.py..."
          python summarize_logs.py || {
            echo "Error: summarize_logs.py failed"
            exit 1
          }

      - name: Post PR comment with summary table
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            
            // Read the updated README content
            const readmePath = 'docs/soul_debate/README.md';
            
            try {
              const readmeContent = fs.readFileSync(readmePath, 'utf8');
              
              // Extract the summary table (everything from the README since it contains just the table)
              const summaryContent = readmeContent.trim();
              
              // Create the comment body
              const commentBody = '## ðŸ§  Soul Debate Logs Analysis\n\n' + summaryContent + '\n\n---\n*This summary was automatically generated from log analysis. Updated: ' + new Date().toISOString() + '*';

              // Check if we're in a PR context
              if (!context.payload.pull_request) {
                console.log('Not in a pull request context, skipping comment');
                return;
              }

              const { owner, repo } = context.repo;
              const issue_number = context.payload.pull_request.number;

              // Look for existing comment from this bot
              const comments = await github.rest.issues.listComments({
                owner,
                repo,
                issue_number,
              });

              const botComment = comments.data.find(comment => 
                comment.user.login === 'github-actions[bot]' && 
                comment.body.includes('Soul Debate Logs Analysis')
              );

              if (botComment) {
                // Update existing comment
                await github.rest.issues.updateComment({
                  owner,
                  repo,
                  comment_id: botComment.id,
                  body: commentBody
                });
                console.log(`Updated existing comment ${botComment.id}`);
              } else {
                // Create new comment
                await github.rest.issues.createComment({
                  owner,
                  repo,
                  issue_number,
                  body: commentBody
                });
                console.log('Created new comment');
              }
              
            } catch (error) {
              console.error('Error processing README or posting comment:', error);
              process.exit(1);
            }

      - name: Commit updated README
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add docs/soul_debate/README.md
          
          # Only commit if there are changes
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Auto-update soul debate logs summary [skip ci]"
            git push
            echo "Committed and pushed updated README"
          fi